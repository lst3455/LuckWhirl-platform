<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.infrastructure.persistent.dao.IRaffleActivityAccountDao">

    <resultMap id="dataMap" type="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="activity_id" property="activityId"/>
        <result column="total_amount" property="totalAmount"/>
        <result column="total_remain" property="totalRemain"/>
        <result column="day_amount" property="dayAmount"/>
        <result column="day_remain" property="dayRemain"/>
        <result column="month_amount" property="monthAmount"/>
        <result column="month_remain" property="monthRemain"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <insert id="insertActivityAccount" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        insert into raffle_activity_account
        (user_id, activity_id, total_amount, total_remain, day_amount,
         day_remain, month_amount, month_remain, create_time, update_time)
        values
            (#{userId}, #{activityId}, #{totalAmount}, #{totalRemain}, #{dayAmount},
             #{dayRemain}, #{monthAmount}, #{monthRemain}, now(), now())
    </insert>

    <update id="updateAccountQuota" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        update raffle_activity_account
        set
            total_amount = total_amount + #{totalAmount},
            total_remain = total_remain + #{totalRemain},
            day_remain = day_remain + #{dayRemain},
            day_amount = day_amount + #{dayAmount},
            month_remain = month_remain + #{monthRemain},
            month_amount = month_amount + #{monthAmount},
            update_time = now()
        where user_id = #{userId} and activity_id = #{activityId}
    </update>

    <select id="queryActivityAccountByUserId" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount" resultMap="dataMap">
        select user_id, activity_id, total_amount, total_remain, day_amount,
               day_remain, month_amount, month_remain
        from raffle_activity_account
        where user_id = #{userId} and activity_id = #{activityId}
    </select>


    <update id="updateActivityAccountRemain" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        update raffle_activity_account
        set total_remain = total_remain - 1,
            day_remain = day_remain - 1,
            month_remain = month_remain - 1,
            update_time = now()
        where user_id = #{userId} and activity_id = #{activityId} and total_remain > 0 and day_remain > 0 and month_remain > 0
    </update>

    <update id="updateActivityAccountMonthRemain" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccount">
        update raffle_activity_account
        set month_remain = #{monthRemain} - 1, update_time = now()
        where user_id = #{userId} and activity_id = #{activityId}
    </update>

    <update id="updateActivityAccountDayRemain" parameterType="org.example.infrastructure.persistent.po.RaffleActivityAccountDay">
        update raffle_activity_account
        set day_remain = #{dayRemain} - 1, update_time = now()
        where user_id = #{userId} and activity_id = #{activityId}
    </update>







</mapper>
